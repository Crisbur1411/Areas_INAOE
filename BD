create database release_students_areas;

CREATE TABLE IF NOT EXISTS type_users
(
            	id_type_users serial NOT NULL,
            	CONSTRAINT id_type_users PRIMARY KEY (id_type_users),           	
            	name varchar (50) NOT NULL,
				key varchar (100),
            	details varchar (250),                
            	status integer DEFAULT 1
);

INSERT INTO type_users (name, key, details) VALUES
				('Administrador', '001', 'Administrador del sistema');

CREATE TABLE IF NOT EXISTS users
(
            	id_user serial NOT NULL,
            	CONSTRAINT id_user PRIMARY KEY (id_user),           	
            	username varchar (50) NOT NULL UNIQUE,
            	password varchar (50) NOT NULL UNIQUE,
                name varchar (100) NOT NULL,
                surname varchar (100) NOT NULL,
                second_surname varchar (100) NOT NULL,
            	fk_type integer NOT NULL,			
				CONSTRAINT foreign_key_fk_type FOREIGN KEY (fk_type)
				REFERENCES public.type_users (id_type_users) MATCH SIMPLE,
            	permission integer,
				date_register timestamp without time zone,
            	status integer DEFAULT          	1
);


INSERT INTO users (username, password, name, surname, second_surname, type, date_register) VALUES
				('admin.inaoe', 'aDm1n1sTrAd0R_*845', 'Miguel', 'Valencia', 'Serrano', 1, NOW());

CREATE TABLE IF NOT EXISTS areas
(
            	id_area serial NOT NULL,
            	CONSTRAINT id_area PRIMARY KEY (id_area),           	
            	name varchar (50) NOT NULL,
				key varchar (100),
            	details varchar (50),                
            	status integer DEFAULT          	1
);

CREATE TABLE IF NOT EXISTS user_area
(
            	id_user_area serial NOT NULL,
            	CONSTRAINT id_user_area PRIMARY KEY (id_user_area),           	
            	fk_user integer NOT NULL,
				CONSTRAINT foreign_key_fk_user FOREIGN KEY (fk_user) 
				REFERENCES public.users (id_user) MATCH SIMPLE,
            	fk_area integer NOT NULL,
				CONSTRAINT foreign_key_fk_area FOREIGN KEY (fk_area) 
				REFERENCES public.areas (id_area) MATCH SIMPLE
);

CREATE TABLE IF NOT EXISTS courses
(
            	id_course serial NOT NULL,
            	CONSTRAINT id_course PRIMARY KEY (id_course),
            	cve integer NOT NULL,
            	name varchar (250) NOT NULL,
           		type  integer NOT NULL,
           		status integer DEFAULT 1
);

CREATE TABLE IF NOT EXISTS students
(
            	id_student serial NOT NULL,
            	CONSTRAINT id_student PRIMARY KEY (id_student),     
                name varchar (100) NOT NULL,
                surname varchar (100) NOT NULL,
                second_surname varchar (100) NOT NULL,
				control_number varchar (150) NOT NULL,
				email varchar (150) NOT NULL,
            	fk_course integer NOT NULL,			
				CONSTRAINT foreign_key_fk_course FOREIGN KEY (fk_course)
				REFERENCES public.courses (id_course) MATCH SIMPLE,
				date_register timestamp without time zone,
            	status integer DEFAULT 1
);

CREATE TABLE IF NOT EXISTS trace_student_areas
(
            	id_trace_student_area serial NOT NULL,
            	CONSTRAINT id_trace_student_area PRIMARY KEY (id_trace_student_area),
            	fk_student integer NOT NULL,
            	CONSTRAINT foreign_key_fk_student FOREIGN KEY (fk_student) REFERENCES public.students (id_student) MATCH SIMPLE,
            	fk_area integer,
            	CONSTRAINT foreign_key_fk_area FOREIGN KEY (fk_area) REFERENCES public.areas (id_area) MATCH SIMPLE, 
            	description varchar (500),
            	date timestamp without time zone,
				status integer  DEFAULT 1
);

CREATE TABLE IF NOT EXISTS notes
(
            	id_note serial NOT NULL,
            	CONSTRAINT id_note PRIMARY KEY (id_note),
            	fk_student integer NOT NULL,
            	CONSTRAINT foreign_key_fk_student FOREIGN KEY (fk_student) REFERENCES public.students (id_student) MATCH SIMPLE,
            	fk_area integer,
            	CONSTRAINT foreign_key_fk_area FOREIGN KEY (fk_area) REFERENCES public.areas (id_area) MATCH SIMPLE, 
            	description varchar (500),
            	date timestamp without time zone,
				status integer  DEFAULT 1
);